@model WebApplicationMVCPractice.Common.LoginDetails
@{
    ViewBag.Title = "ChangePassword";
}

<h2>Change Password</h2>
@* Change Password Page *@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.AccountNumber1)

    <div class="form-group">
        @Html.LabelFor(model => model.UserName1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName1, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter your new Password" } })
            @Html.ValidationMessageFor(model => model.Password1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserRole, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserRole, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserRole, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TransactionPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TransactionPassword, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TransactionPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CurrentBalance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CurrentBalance, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CurrentBalance, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Fund, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Fund, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fund, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}
<p>
    <div class="btn btn-secondary">@Html.ActionLink("Back to List", "Index")</div>
</p>